- name: Check if ipsec database is initialized
  stat:
    path: /etc/ipsec.d/key4.db
  register: check_ipsec_db_init

- name: Initialize ipsec database
  command: ipsec initnss
  when: not check_ipsec_db_init.stat.exists

- name: Read host pkcs12 from first master
  delegate_to: "{{ groups['masters'][0] }}"
  command: >
    base64 {{ ipsec_ca_dir }}/private/{{ inventory_hostname }}.p12
  register: read_pkcs12
  changed_when: false

- name: Copy pkcs12 base64 to node
  copy:
    content: "{{ read_pkcs12.stdout }}"
    dest: /etc/ipsec.d/{{ inventory_hostname }}.p12.base64
    mode: u=rw,g=,o=
  register: copy_pkcs12_base64

- when: copy_pkcs12_base64.changed
  block:

  - name: Decode pkcs12 base64 for /etc/ipsec.d/{{ inventory_hostname }}.p12
    shell: >
      base64 -d /etc/ipsec.d/{{ inventory_hostname }}.p12.base64
      >/etc/ipsec.d/{{ inventory_hostname }}.p12

  - name: Permissions on pkcs12 file /etc/ipsec.d/{{ inventory_hostname }}.p12
    file:
      path: /etc/ipsec.d/{{ inventory_hostname }}.p12
      mode: u=rw,g=,o=

  - name: Import host cert into ipsec database
    command: >
      pk12util -i /etc/ipsec.d/{{ inventory_hostname }}.p12 -d sql:/etc/ipsec.d -W ""
    notify: restart ipsec

- name: ipsec cluster configuration
  template:
    src: openshift-cluster.conf.j2
    dest: /etc/ipsec.d/openshift-cluster.conf
  notify: restart ipsec

- name: ipsec secrets configuration
  template:
    src: openshift-cluster.secrets.j2
    dest: /etc/ipsec.d/openshift-cluster.secrets
  notify: restart ipsec

- name: start and enable ipsec service
  service:
    name: ipsec
    state: started
    enabled: yes
